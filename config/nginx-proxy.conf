# Production reverse proxy configuration
events {
    worker_connections 1024;
}

http {
    upstream dizzigo_backend {
        server dizzigo-website:8080;
    }

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=main:10m rate=10r/s;

    server {
        listen 80;
        server_name dizzigo.dev www.dizzigo.dev;

        # Redirect HTTP to HTTPS in production
        # return 301 https://$server_name$request_uri;
        
        # For development, proxy directly
        location / {
            limit_req zone=main burst=20 nodelay;
            
            proxy_pass http://dizzigo_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # Health check
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }

    # HTTPS configuration (uncomment for production with SSL)
    # server {
    #     listen 443 ssl http2;
    #     server_name dizzigo.dev www.dizzigo.dev;
    #     
    #     ssl_certificate /etc/nginx/ssl/cert.pem;
    #     ssl_certificate_key /etc/nginx/ssl/key.pem;
    #     
    #     location / {
    #         proxy_pass http://dizzigo_backend;
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header X-Forwarded-Proto $scheme;
    #     }
    # }
}
